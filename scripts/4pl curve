# Import necessary libraries to generate 4pl curve
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Define the 4PL model function
def four_pl(x, a, b, c, d):
    return ((a - d) / (1.0 + (x / c)**b)) + d

# Define the dataset
x_data = np.array([8000, 2666.666667, 888.8888889, 296.2962963, 98.7654321, 32.9218107, 0])
y_data = np.array([566.3, 234.3, 73.3, 23.5, 6.5, 2.5, 0])

# Fit the 4PL model to the dataset
popt, _ = curve_fit(four_pl, x_data, y_data, bounds=(0, [1000, 10, 10000, 1000]))

# Generate a smooth curve for plotting
x_smooth = np.logspace(np.log10(min(x_data[x_data > 0])), np.log10(max(x_data)), 500)
y_smooth = four_pl(x_smooth, *popt)

# Plot the data and the fitted curve
plt.figure(figsize=(8, 6))
plt.scatter(x_data, y_data, color='red', label='Data Points')
plt.plot(x_smooth, y_smooth, color='blue', label='4PL Fit')
plt.xscale('log')
plt.xlabel('Concentration (log scale)')
plt.ylabel('Response')
plt.title('4PL Curve Fit')
plt.legend()
plt.grid(True, which="both", ls="--", linewidth=0.5)
plt.show()

